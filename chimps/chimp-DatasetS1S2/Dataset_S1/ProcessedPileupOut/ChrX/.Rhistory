}#
values <- values[-1,]#
plot (values[,1],values[,2], xlim=c(0,length(km1)), ylim=c(0,length(km2)), main="10-mer perfect matches", xlab="B&W Lemur CPS1 transcript position", ylab="aye-aye CPS1 transcript position")#
propHit
seq2 <- "GTCTTATCACAAAATCTCATAAAATATATGTAATTTCATTTACTTTTAGTCACAAATCATCTTCAAAATGACGAGGATTTTGACAGCTTGCAAAGTGGTGAGGACACTGAAGACTGGTTTTGGCCTTACCAATGTGACTGCACCCCAAAAATGGAAATTTTCAAGACCTGGCATCAGGCTTCTTTCTGTCAAGGCACAGACAGCACACATTGTCCTGGAAGATGGAACTAAGATGAAAGGTTACTCCTTTGGGCATCCATCCTCTGTTGCTGGTGAAGTGGTTTTTAATACTGGCCTGGGAGGGTACCCAGAAGCTATTACTGACCCTGCCTACAAGGGACAGATTCTCACAATGGTCAACCCCATTGTTGGGAACGGTGGAGCTCCTGATACTACTGCTCTGGATGAACTGGGACTTAGCAAATATTTGGAGTCTGATGGAATCAAGGTTGCAGGTTTGCTGGTGCTGGATTATAGTAAAGACTACAACCACTGGCTGGCTACCAAGAGTTTAGGGCAATGGCTACAGGAAGAAAAGGTTCCTGCAATTTATGGAGTGGACACAAGAATGCTGACTAAAATAATTCGGGATAAGGGTACCGTGCTTGGGAAGATTGAGTTTGAAGGTCAGCCTGTGGATTTTGTGGATCCAAATATGCAGAATTTGATTGCCGAGGTTTCAACGAAGGATGTCAAGGTGTATGGCAAAGGAAACCCCACAAAAGTGGTAGCTGTAGACTGTGGAATTAAAAACAATGTAATCCGCCTACTAGTAAAGCGAGGAGCTGAAGTACACTTAGTTCCCTGGAATCACGATTTCACCAAGATGGAATATGATGGGATTTTGATTGCGGGAGGACCTGGGAATCCAGCTCTTGCAGAACCACTAATTCAGAATGTCAGAAAGATTATGGAGAGTGATCGCAAGGAGCCATTGTTTGGAATCAGTACAGGAAACTTAATAACAGGTTTGGCTGCTGGTGCCAAAACCTACAAGATGTCCATGGCCAACA
GAGGGCAGAATCAGCCTGTTTTGAATATCACAAACAGACAAGCTTTCATTACCGCTCAGAATCATGGCTATGCTTTGGACAACGCCCTCCCTGCTGGCTGGAAACCACTTTTTGTGAATGTCAATGATCAAACAAATGAGGGAATCATGCATGAGAGCAAACCCTTCTTCGCTGTGCAGTTCCACCCAGAGGTCACCCCAGGGCCAACAGACACTGAGTATCTGTTTGATTCCTTTTTCTCACTGATAAAGAAAGGAAAAGGTACTGCCGTTACATCAGTCCTACCAAAGCCAGCACTAGTTGCATCTCGAGTTGAGGTTTCCAAAGTCCTTATCCTAGGATCAGGAGGTCTGTCCATTGGTCAGGCAGGTGAATTTGATTACTCAGGATCTCAAGCTGTAAAAGCCATGAAGGAGGAAAATGTCAAAACTGTTCTGATGAACCCAAACATTGCATCAGTCCAGACCAATGAGGTGGGCTTAAAGCAAGCCGATACCGTCTACTTTCTTCCCATTACCCCTCAGTTTGTCACAGAGGTCATCAAGGCAGAACGGCCAGATGGGTTAATTCTGGGCATGGGTGGCCAGACAGCTCTGAACTGTGGAGTGGAACTATTCAAGAGAGGTGTGCTCAAGGAATACGGTGTGAAAGTCCTGGGAACTTCAGTTGAATCCATTATGGCCACAGAAGACAGGCAGCTGTTTTCAGACAAACTAAATGAGATCAATGAAAAGATTGCTCCAAGTTTTGCAGTGGAATCGATGGAAGACGCGTTGAAGGCAGCAGACACCATTGGCTACCCAGTAATGATCCGTTCTGCCTATGCGCTGGGAGGGTTAGGTTCAGGCATCTGTCCCAATAGAGAGACTTTGATGGATCTCGGCACAAAGGCCTTTGCTATGACCAACCAAATTCTGGTGGAGAAGTCAGTGACAGGTTGGAAAGAAATAGAATACGAAGTGGTACGAGATGCTGATGACAATTGTGTCACTGTCTGCAACATGGAAAATGTTGATGCCATG
GGTGTTCACACAGGTGACTCAGTTGTTGTGGCTCCTGCCCAGACACTCTCCAATGCTGAGTTTCAGATGTTGAGACGTAGTTCTATCAATGTTGTTCGCCACTTGGGCATTGTGGGTGAATGCAACATTCAGTTTGCCCTTCATCCTACCTCAATGGAATACTGCATCATTGAAGTGAATGCCAGACTGTCCCGAAGCTCTGCTCTGGCCTCAAAAGCCACTGGCTACCCATTGGCATTCATTGCTGCAAAGATTGCCCTAGGAATCCCACTTCCAGAAATTAAGAATGTTGTATCCGGGAAGACATCAGCCTGCTTTGAACCTAGCCTGGATTACATGGTCACCAAGATTCCCCGCTGGGATCTTGACCGCTTCCACGGAACATCTAGCCGAATTGGTAGCTCTATGAAAAGTGTAGGAGAGGTCATGGCTATTGGTCGTACCTTTGAGGAATGTTTCCAGAAGGCTTTACGAATGTGCCATCCATCAATAGAGGGTTTCAGTCCCCGTCTCCCAATGAACAAAGAATGGCCATCTAACCTAGATCTTAGAAAAGAGTTGTCTGAACCAACCAGCACCCGTATGTATGCCATTGCCAAGGCCATTGATGACAAAATGTCCCTTGATGAGATTGAGAAGCTCACATACATTGACAAGTGGTTTCTTTATAAGATGCGTGACATTTTAAACATGGAAAAGACACTGAAAGGGCTCAACAGTGAGTCCATTACAGAAGAAACCCTGAAAAAGGCAAAGGAAATCGGGTTCTCTGATAAGCAGATTTCAAAATGCCTTGGGCTCACTGAGGCCCAGGCAAGGGAGCTGAGGTTAAAGAAAAACATCCACCCTTGGGTTAAACAGATTGATACACTGGCTGCAGAATACCCGTCAGTAACAAACTATCTCTATGTTACCTACCATGGTCAGGAGCATGATATCAATTTTGATGACCATGGAATGATGGTGCTAGGCTGTGGTCCATATCACATTGGCAGCAGTGTGGAATTTGATTGGTGTGCTGT
CTCTAGTATCCGCACACTGCGTCAGCTTGGCAAGAAGACAGTGGTGGTGAATTGCAATCCTGAGACTGTGAGCACAGACTTTGATGAGTGCGACAAACTGTACTTTGAAGAGTTGTCTTTGGAGAGAATCCTAGACATCTACCATCAGGAGGCATGTGGTGGCTGCATCATATCAGTTGGAGGCCAGATTCCAAACAACCTGGCAGTTCCTCTGTACAAGAATGGTGTCAAGATTATGGGCACAAGCCCCTTGCAGATTGACAGGGCTGAGGATCGCTCCATCTTCTCAGCTGTCTTGGATGAGCTGAAAGTGGCTCAGGCACCTTGGAAAGCTGTTAATACTTTGAATGAAGCACTGGAATTTGCAAAGTCTGTGGGCTATCCCTGCTTATTGAGGCCTTCCTATGTTTTGAGTGGGTCCGCTATGAATGTGGTATTTTCTGAGGATGAGATGAAAAAATTCCTGGAGGAGGCCACTAGAGTTTCTCAGGAGCACCCAGTGGTGCTGACGAAATTTATTGAAGGGGCCCGAGAAGTAGAAATGGATGCTGTTGGCAAAGATGGAAGGGTTATCTCTCATGCCATCTCCGAACATGTTGAAGATGCAGGTGTCCACTCAGGAGATGCCACTCTGATGCTGCCCACACAAACCATCAGCCAAGGAGCCATTGAAAAGGTGAAGGATGCTACTCGGAAGATTGCAAAGGCTTTTGCCATCTCTGGTCCATTTAACGTCCAATTCCTTGTCAAAGGAAATGATGTCTTGGTGATTGAGTGCAACTTGAGAGCTTCTCGATCCTTCCCCTTTGTTTCCAAGACTCTCGGGGTTGACTTCATTGATGTGGCTACCAAGGTGATGATTGGAGAGAACATTGATGAGAAACGACTTCCAACATTGGACCATCCCATAATTCCCGCTGACTATGTTGCAATTAAGGCTCCCATGTTTTCCTGGCCCCGGTTGAGGGATGCTGACCCCATTCTGAGATGTGAGATGGCTTCCACTGGAGAGGTGGCTTGCT
TTGGTGAAGGTATTCATACAGCCTTCCTAAAGGCAATGCTTTCCACAGGATTTAAGATACCCCAGAAAGGCATCCTGATTGGCATCCAGCAATCATTCCGGCCAAGATTCCTTGGTGTGGCTGAACAGTTACACAATGAAGGTTTCAAGCTCTTTGCCACGGAAGCCACATCAGACTGGCTCAATGCCAACAATGTCCCTGCCACCCCAGTGGCATGGCCATCTCAAGAAGGACAGAATCCCAGCCTCTCTTCCATCAGAAAATTGATTAGAGATGGCATCATTGACCTAGTGATTAACCTTCCCAACAACAACACTAAATTTGTCCATGATAATTATGTGATCCGGAGGACAGCTGTGGATAGTGGTATCCCTCTCCTCACTAATTTTCAGGTGACCAAACTTTTTGCTGAAGCTGTGCAGAAATCTCGCAAGGTGGACTCCAAGAGTCTTTTCCACTACAGGCAGTACAGTGCTGGAAAAGCAACATAGAGATGAAGACACCCCAGCCCCATTATTAAATCAACCTGAGCCACATGTTATCCAAAGGAACTGATACTTTGTTTCCCAGAGATGAATATTGATACCTAAACTTTATTTCAGTTTACTTCCTCATGCCTTAATATCCTGTATCTTTTGCAATTAAATTGTCAGTTACTTCTTCAAAACCATACAGACCTTCCTAAGTTACTTACTCTTCATGAGGTTTCATCCATTTACTAATACCTTATTTTTGGTGGACTAGGCTTGCCTATG"
k <- 10#
kmers <- function(seq,k) { ret <- c(); for(i in seq(nchar(seq)-k)) { ret <- append(ret,substr(seq,i,i+k)) }; return(ret) }#
km1 <- kmers(seq1,k)#
km2 <- kmers(seq2,k)#
N <- 20#
output <- matrix(NA,length(km1),N)#
for (i in 1:length(km1)) {#
out <- grep(km1[i], km2)#
if(length(out)==0) {next;}#
output[i,1:(length(out))] <- out }#
rowmatch <- which(output[,1] != "NA")#
hit <- output[rowmatch,]#
propHit <-  nrow(hit)/nrow(output)#
r1 <- seq(1:length(km1))#
outplus <- cbind(r1,output)#
hit2 <- outplus[rowmatch,]#
result <- sum(!is.na(output))#
out1 <- NA#
out2 <- NA#
values <- data.frame(out1,out2)#
for(i in 1:nrow(outplus)) {#
out1 <- outplus[i,1]#
  for(j in 2:N) {#
  out2 <- outplus[i,j]#
  if(is.na(out2)==TRUE) {next;}#
  tempval <- data.frame(out1,out2)#
  values <- rbind(values,tempval) }#
}#
values <- values[-1,]#
plot (values[,1],values[,2], xlim=c(0,length(km1)), ylim=c(0,length(km2)), main="10-mer perfect matches", xlab="B&W Lemur CPS1 transcript position", ylab="aye-aye CPS1 transcript position")#
propHit
seq2 <- "GTCAGCTTTAAACACTGACTGTACCCTTTAGCTTTCTTTCATATTAATTAATCTTATAACAAAACTCTCATAGCATATATATAATTTTATTTAACCTTAGTGACAAATCATCTTCAAAATGACGAGGATTTTGACAGCTTGCAAAGTGGTGAGGACACTGAAGACTGGTTTTGGGTTTACCAATGTGACTGCACACCAACCATGGAAATTTTCAAGACCTGGCATCAGACTTCTTTCTGTCAAGGCACAGACAGCACACATTGTCCTGGAAGATGGAACTAAGATGAAAGGTTACTCCTTTGGCCACCCATCTTCTGTTGCTGGTGAAGTCGTTTTTAATACTGGCCTGGGAGGGTACCCTGAAGCTATTACTGACCCTGCGTACAAGGGACAGATTCTCACAATGGCCAACCCTATTATTGGGAATGGTGGAGCCCCTGACGCTGCTGCACTGGATGAACTGGGACTTAGAAAATATTTGGAGTCTGATGGAATCAAGGTTGCAGGTTTGCTGGTGCTGAATTATAGCAAAGACTACAACCACTGGCTGGCCACCAAGAGTCTAGGGCAATGGCTACAAGAAGAAAAGGTTCCTGCAATTTATGGGGTGGACACAAGAATGCTGACTAAAATAATTCGGGATAAGGGAACCATGCTTGGGAAGATTGAATTTGAAGGTCAGCCTGTGGATTTTGTGGATCCAAATAAACAGAATTTGATTGCTGAGGTTTCAACCAAGGATGTCAAGGTGTACGGCAAAGGAAACCCTACAAAAGTGGTAGCTGTGGACTGTGGGATAAAAAACAATGTCATCCGCCTGCTAGTAAAGAGAGGAGCTGAAGTGCATTTAGTTCCCTGGAATCACGATTTCACCAACATGGAGTACGATGGGCTTTTGATGGCTGGAGGACCTGGGGATCCAGCTCTCGCACAACCACTAATTCAGAATGTCAAAAAGATTTTGGAGAGTGATCGCAAGGAGCCGTTGTTTGGAATCAGTACAGGAAATTTAA
TAACAGGATTGGCTGCTGGTGCCAAATCCTACAAGATGCCCATGGCCAACAGAGGGCAGAACCAGCCTGTTTTGAATATCACAAACAGACAGGCTTTCATTACTGCTCAGAACCATGGCTACGCTCTGGACAATACCCTCCCCACTGGGTGGAAACCACTTTTTGTGAATGTCAACGATCAAACAAATGAGGGGATTATGCATGAGAGCAAACCCTTCTTTGCTGTGCAGTTCCACCCAGAGGTCAGCCCAGGGCCCACAGACACTGAGTACTTGTTTGATTCCTTTTTCTCACTGATAAAGAAGGGCAAAGGTACCACCATTACATCAGTTCTACCAAAGCCAGCCCTAGTTGCATCTCGGGTTGAGGTTTCCAAAGTCCTTATCCTAGGATCGGGAGGTCTCTCCATTGGTCAGGCAGGGGAATTTGATTACTCGGGATCTCAAGCTGTAAAAGCCATGAAGGAAGAAAATGTCAAAACTGTCCTGATGAACCCAAACATTGCATCAGTCCAGACCAATGAGGTGGGCCTAAAGCAAGCAGATGTTGTCTACTTTCTTCCCATCACCCCTCAGTTCGTCACAGAGGTTATCAAGGCAGAACGGCCAGACGGTTTAATTCTAGGCATGGGTGGCCAGACAGCTCTGAACTGTGGAGTGGAGCTATTCAAGAGAGGTGTGCTCAAGGAGTATGGTGTGAAAGTCCTGGGAACTTCAGTTGAATCCATTATGGCCACAGAAGACAGGCAGCTGTTCTCAGACAAACTAAATGAGATTAATGAAAAGATTGCTCCAAGTTTTGCAGTGGAAACGATAGAGGATGCGCTGAAGGCAGCAGACACCATTGGCTACCCAGTGATGATCCGTTCTGCCTATGCACTGGGCGGGTTGGGCTCAGGCCTCTGTCCGACCAGGGAAACCTTAATGGACCTTAGCGCAAAGGCCTTTGCTATGACCAACCAGATTCTGGTGGAGAAATCAGTGACAGGTTGGAAAGAAATAGAATATGAAGTGGTCCGAGAT
GCTGATGATAATTGTGTCACTGTCTGTAATATGGAAAATGTTGATGCCATGGGTGTTCATACAGGTGATTCAGTTGTTGTGGCCCCTGCCCAGACACTTTCCAATGCGGAGTTTCAGATGTTGAGACGTTCTTCAATCAATGTTGTCCGCCACTTGGGCATTGTGGGCGAATGCAACATCCAGTTTGCCCTTCATCCTACCTCAATGGAATACTGCATCATTGAAGTGAATGCCAGACTGTCCCGAAGCTCTGCCCTGGCTTCAAAGGCCACTGGCTACCCATTGGCATTCATTGCTGCCAAGATTGCCTTAGGAATCCCACTTCCAGAAATCAAGAACGTTGTATCAGGGAAGACATCAGCCTGCTTTGAACCTAGCCTGGATTACATGGTCACCAAGATTCCTCGCTGGGATCTTGACCGTTTTCACGGAACATCTAGTCGAATTGGTAGCTCTATGAAAAGTGTAGGAGAGGTCATGGCTATCGGTCGCACGTTTGAGGAGAGTTTCCAGAAGGCTTTACGGATGTGCCACCCGTCTATAGATGGTTTCACTCCCCGTCTCCCAATGAACAAAGAATGGCCGTCTAACCTAGACCTCAGAAGAGAGCTGGCTGACCCATCCAGCACCCGCATCTATGCCATTGCCAAGGCTTTGGAAGACAACATGTCCCTTGATGAGGTTGAGAAGCTCACATACATTGACAAGTGGTTTTTGTATAAGATGCGTGACATTTTAAACATGGAAAAGACACTGAAAGAGCTCAACAGTGAGTCCATTACAGAAGAAACTCTCAAAAAGGCAAAAGAGATCGGATTCTCGGACAAGCAGATTTCAAAATGCCTAGGGCTGACGGAGGCCCAGACAAGGGAGCTGAGGTTAAAGAAAAACATCCACCCTTGGGTTAAACAGATTGATACACTGGCTGCAGAATACCCATCAGTAACAAACTACCTCTATGTTACCTACAGTGGTCAGGAGCATGATATCAATTTTGATGACCACGGAATGATGGTGCTGGG
CTGTGGCCCATATCACATTGGCAGCAGTGTGGAATTTGATTGGTGTGCTGTCTCCAGTATCCGCACACTACGTCAACTCGGCAAGCAGACGTGTGGGGGCTGCATCATATCAGTTGGGGGCCAGATTCCAAACAACTTGGCTGTCCCTCTGTATAAGAATGGTGTCAAGATCATGGGCACAAGTCCATTGCAGATCGACAGGGCTGAGGATCGGTCTATCTTCTCAGCTGTCTTGGATGAGCTGAAGGTGGCTCAGGCACCGTGGAAAGCTGTTAATACTTTGAATGAAGCACTGGAATTTGCAAAGTCTGTGGGCTACCCCTGCTTGTTGAGACCTTCCTATGTTTTAAGTGGGTCTGCCATGAATGTGGTATTCTCTGAGGATGAAATGAAAAAGTTCCTAGAGGAGGCCACTAGAGTCTCTCAGGAGCACCCAGTAGTGCTGACAAAATTTATTGAGGGGGCCCGGGAAGTAGAAATGGATGCTGATGCCATCTCTGAACATGTTGAAGACGCAGGCGTCCACTCAGGAGATGCCACTCTGATGCTGCCCACACAAACCATCAGCCAAGGAGCCATTGAAAAGGTGAAGGATGCTACACGAAAGATTGCAAAGGCTTTTGCCATCTCTGGCCCATTCAACGTCCAGTTTCTTGTAAAAGGAAACGATGTCTTGGTGATTGAATGCAACCTGAGAGCTTCTCGATCCTTCCCCTTTGTTTCTAAGACTCTCGGGGTAGACTTCATTGATGTAGCCACCAAGGTGATGATTGGAGAGAACATTGAAGAAAAACCTCTTCCAACATTGGAGCATCCCATAATTCCTGCTGACTATGTTGCAATTAAGGCTCCAATGTTTTCCTGGCCCCGGTTAAGGGATGCTGACCCTATTCTGAGATGTGAGATGGCTTCCACGGGAGAGGTGGCTTGCTTTGGTGAAGGAATTCACACAGCCTTCCTAAAGGCGATGCTTTCCACAGGATTTAAGATACCCCAGAAAGGCATCCTGATAGGAATTCAGC
AATCATTTCGTCCAAAATTCCTTGGTGTGGCTGAACAATTACACAATGAAGGTTTCAAGCTCTTTGCCACGGAAGCCACATCAGACTGGCTCAATGCCAACAATGTTCCTGCCACCCCAGTGGCGTGGCCGTCTCAGGAAGGACAGAATCCCAGCCTTTCTTCCATCAGAAAATTGATTAAAGATGGCAGCATTGACCTAGTGATTAACCTCCCTAATAACAACACTAAGTTTGTCCATGATAATTACGTGATTCGGAGGACAGCTGTTGACAGTGGAGTCCCTCTCCTCACTAATTTTCAGGTGACCAAACTTTTTGCTGAAGCTGTACAGAAATCTCGCACCGTGGACTCCAAGAGTCTTTTCCACTACAGGCAATACAGTGCTGGAAAAGCAGCATAGAGAAGCAGACACCCCAGTCCCATTTTTAAATCAATCTGAGCCACCTTCATCTAAAGGAACCTATTTCCGACTTTGTTTCCCAGAGATGAATATTGATATCGAACTTGATTTCAGTTTACTGTTATGCCTTAATATTCTGTATCTTTCACAATTAAATTGTCAGTCCCTTCTTCAAAACCTTACTTAGAATCCTTTCCGAGTTACTTGTTCTTTATGAGAATTCATCCATTTACTAATACCTTATTTTTGGTGGACTAGTC"
k <- 10#
kmers <- function(seq,k) { ret <- c(); for(i in seq(nchar(seq)-k)) { ret <- append(ret,substr(seq,i,i+k)) }; return(ret) }#
km1 <- kmers(seq1,k)#
km2 <- kmers(seq2,k)#
N <- 20#
output <- matrix(NA,length(km1),N)#
for (i in 1:length(km1)) {#
out <- grep(km1[i], km2)#
if(length(out)==0) {next;}#
output[i,1:(length(out))] <- out }#
rowmatch <- which(output[,1] != "NA")#
hit <- output[rowmatch,]#
propHit <-  nrow(hit)/nrow(output)#
r1 <- seq(1:length(km1))#
outplus <- cbind(r1,output)#
hit2 <- outplus[rowmatch,]#
result <- sum(!is.na(output))#
out1 <- NA#
out2 <- NA#
values <- data.frame(out1,out2)#
for(i in 1:nrow(outplus)) {#
out1 <- outplus[i,1]#
  for(j in 2:N) {#
  out2 <- outplus[i,j]#
  if(is.na(out2)==TRUE) {next;}#
  tempval <- data.frame(out1,out2)#
  values <- rbind(values,tempval) }#
}#
values <- values[-1,]#
plot (values[,1],values[,2], xlim=c(0,length(km1)), ylim=c(0,length(km2)), main="10-mer perfect matches", xlab="B&W Lemur CPS1 transcript position", ylab="aye-aye CPS1 transcript position")#
propHit
seq2 <- "ATTTTATTTAATCTTAGTGACAAATCATCTTCAAAATGACGAGGATTTTGACAGCTTGCAAAGTGGTGAGAACACTGAAGACTGGTTTTGGCTTTACCAACGTGACTGCACACCAACCATGGAAATTTTCAAGACCTGGCATCAGACTTCTTTCTGTCAAGGCACAGACAGCACACATTGTCCTGGAAGATGGAACTAAGATGAAAGGTTACTCCTTTGGCCACCCATCCTCTGTTGCTGGTGAAGTGGTTTTTAATACTGGCCTGGGAGGGTACCCTGAAGCTATTACTGACCCTGCGTACAAGGGACAGATTCTCACAATGGCCAACCCTATTATTGGAAACGGTGGAGCCCCTAACGCTGCTGCACTGGATGAACTGGGACTTAGAAAATATTTGGAGTCTGATGGAATCAAGGTTGCAGGTTTGCTGGTGCTGAATTATAGCAAAGACTACAATCACTGGCTGGCCACCAAGAGTCTAGGGCAATGGCTACAAGAAGAAAAGGTTCCTGCAATTTATGGGGTGGACACAAGAATGCTGACTAAAATAATTCGGGATAAGGGAACCATGCTTGGGAAGATTGAATTTGAAGGTCAGCCTGTGGATTTTGTGGATCCAAATAAACAGAATTTGATTGCTGAGGTTTCAACCAAGGATGTCAAGGTGTACGGCAAAGGAAACCCTACGAAAGTGGTAGCTGTGGACTGTGGGATCAAAAACAATGTAATCCGCCTACTAGTAAAGAGAGGAGCTGAAGTGCATTTAGTTCCCTGGAATCACGATTTCACCAACATGGAGTACGATGGGCTTTTGATTGCTGGAGGACCTGGGGATCCAGCTCTCGCACAACCACTAATTCAGAACGTCAAAAAGATTTTGGAGAGTGATCGCAAGGAGCCGTTGTTTGGAATCAGTACAGGAAATTTAATAACAGGATTGGCTGCTGGTGCCAAATCCTACAAGATGCCTATGGCCAACAGAGGGCAGAACCAGCCTGTTTTGAATATCACA
AACAGACAGGCTTTCATTACTGCTCAGAACCATGGCTATGCTCTGGACAATACCCTCCCCGCTGGGTGGAAACCACTTTTTGTGAATGTCAACGATCAAACAAATGAGGGGATTATGCATGAGAGCAAACCCTTCTTTGCTGTGCAGTTCCACCCAGAGGTCAGCCCAGGGCCGACAGACACTGAGTACCTGTTTGATTCCTTTTTCTCACTGATAAAGAAGGGCAAAGGTACCACCATTACATCAGTTCTACCAAAGCCAGCCCTAGTTGCATCTCGGGTTGAGGTTTCCAAAGTCCTTATCCTAGGATCAGGAGGTCTCTCCATTGGTCAGGCAGGTGAATTTGATTACTCGGGATCTCAAGCTGTAAAAGCCATGAAGGAAGAAAATGTCAAAACTGTCCTGATGAACCCCAACATTGCATCAGTCCAGACCAATGAGGTGGGCTTAAAGCAAGCAGATGTTGTCTACTTTCTTCCCATCACCCCTCAGTTTGTCACAGAGGTTATCAAGGCAGAACGGCCAGACGGGTTAATTCTAGGCATGGGTGGCCAGACAGCTCTGAACTGTGGAGTGGAGCTATTCAAAAGAGGTGTGCTCAAGGAGTATGGTGTGAAAGTCCTGGGAACTTCAGTTGAATCCATTATGGCCACAGAAGACAGGCAGCTGTTCTCAGACAAACTAAATGAGATTAATGAAAAGATTGCTCCAAGTTTTGCAGTGGAAACGATAGAGGATGCGCTGAAGGCAGCAGATACCATTGGCTACCCGGTGATGATCCGTTCTGCCTACGCACTGGGCGGGTTGGGCTCAGGCCTCTGCCCGACCAGGGAGACCTTAATGGACCTTAGCACAAAGGCCTTTGCTATGACCAACCAGATTCTGGTGGAGAAATCCGTGACAGGTTGGAAAGAAATAGAATATGAAGTGGTCCGAGATGCTGATGACAATTGTGTCACTGTCTGTAATATGGAAAATGTTGATGCCATGGGTGTTCATACAGGTGATTCAGTTGTTGTGGC
CCCTGCCCAGACACTTTCCAATGCGGAGTTTCAGATGTTGAGACGTTCTTCAATCAATGTTGTCCGCCACTTGGGCATTGTGGGCGAATGCAACATCCAGTTTGCCCTTCACCCTACCTCAATGGAATACTGCATCATTGAAGTGAATGCCAGACTGTCCCGAAGCTCTGCCCTGGCTTCAAAGGCCACTGGCTACCCATTGGCATTTATTGCTGCCAAGATTGCTTTAGGAATCCCACTTCCAGAAATCAAGAACGTTGTATCAGGGAAGACATCAGCCTGCTTTGAACCTAGCCTGGATTACATGGTCACCAAGATTCCTCGCTGGGATCTTGACCGTTTTCACGGAACATCTAGCCGAATTGGTAGCTCTATGAAAAGTGTAGGAGAGGTCATGGCTATTGGTCGCACGTTTGAGGAGAGTTTCCAGAAGGCTTTACGGATGTGCCACCCATCTATAGATGGTTTCACTCCCCGTCTCCCGATGAACAAAGAATGGCCGTCTAACCTAGACCTCAGAAGAGAGCTGGCTGACCCATCTAGCACCCGCATCTATGCCATCGCCAAGGCTTTGGAAGACAACATGTCCCTTGATGAGGTTGAGAAGCTCACATACATTGACAAGTGGTTTTTGTATAAGATGCGTGACATTTTAAACATGGAAAAGACACTGAAAGAGCTCAACAGTGAGTCCATTACAGAAGAAACCCTCAAAAAGGCAAAGGAGATCGGATTCTCAGACAAGCAGATTTCAAAATGCCTAGGGCTGACAGAGGCCCAGACAAGGGAGCTGAGGTTAAAGAAAAACATCCACCCTTGGGTTAAACAGATTGATACACTGGCTGCAGAATACCCATCAGTAACAAACTACCTCTATGTTACCTACAGTGGTCAGGAGCATGATATCAATTTTGATGACCACGGAATGATGGTGCTGGGCTGTGGCCCATATCACATTGGTAGCAGTGTGGAATTTGATTGGTGTGCTGTCTCCAGTATCCGCACACTGCGTCAACTTGGCA
AGAAGACAGTGGTGGTGAATTGCAACCCTGAGACTGTGAGCACAGACTTTGATGAGTGTGACAAACTGTACTTTGAAGAGTTGTCTTTGGAGAGAATACTAGACATCTACCATCAGGAGGCATGTGGTGGCTGCATCATATCAGTTGGGGGCCAGATTCCAAACAACCTGGCAGTCCCTCTGTATAAGAATGGTGTCAAGATCATGGGCACAAGTCCATTGCAGATCGACAGGGCTGAGGATCGGTCCATCTTCTCAGCTGTCTTGGATGAGCTGAAGGTGGCTCAGGCACCATGGAAAGCTGTTAATACTTTGAATGAAGCACTGGAATTTGCAAAGTCTGTGGGCTACCCCTGCTTGTTGAGACCTTCCTATGTTTTGAGTGGGTCTGCCATGAATGTGGTATTCTCTGAGGATGAAATGAAAAAGTTCCTAGAGGAGGCCACTAGAGTCTCTCAGGAGCACCCAGTGGTGCTGACAAATTTTATTGAGGGGGCCCCATGCCATCTCTGAACATGTGGAAGACGCAGGCGTCCACTCAGGAGATGCCACTCTGATGCTGCCCACACAAACCATCAGCCAAGGAGCCATTGAAAAGGTGAAGGATGCTACACGAAAGATTGCAAAAGCTTTTGCCATCTCTGGCCCATTCAACGTCCAGTTTCTTGTCAAAGGAAACGATGTCTTGGTGATTGAATGCAACCTGAGAGCTTCTCGATCCTTCCCCTTTGTTTCTAAGACTCTCGGGGTAGACTTCATTGATGTGGCCACCAAGGTGATGATTGGAGAGAACATTGAAGAAAAACCTCTTCCAACATTGGAGCATCCTGACTATGTTGCAATTAAGGCTCCAATGTTTTCCTGGCCCCGGTTGAGGGATGCTGACCCTATTCTGAGATGTGAGATGGCTTCCACTGGAGAGGTGGCTTGCTTTGGTGAAGGAATTCACACAGCCTTCCTAAAGGCGATGCTTTCCACAGGATTTAAGATACCCCAGAAAGGCATCCTAATAGGAATTCAGCA
ATCATTCCGTCCAAAATTCCTTGGTGTGGCTGAACAATTACACAATGAAGGTTTCAAGCTCTTTGCCACGGAAGCCACATCAGACTGGCTCAATGCCAACAATGTTCCTGCCACCCCAGTGGCTTGGCCGTCTCAGGAAGGACAGAATCCCAGCCTCTCTTCCATCAGAAAATTGATTAAAGATGGCAGCATTGACCTGGTGATCAACCTCCCTAATAACAACACTAAGTTTGTCCATGATAATTACGTGATTCGGAGGACAGCTGTTGACAGTGGAGTCCCTCTCCTCACTAATTTTCAGGTGACCAAACTTTTTGCTGAAGCTGTACAGAAATCTCGCACCGTGGACTCCAAGAGTCTTTTCCACTACAGGCAATACAGTGCTGGAAAAGCAACGTAGAAAAGCAGACACCCCAGTCGCATTCTTAAATCAATCTGAGCCACCTTTATCTAAAGGAACCTATTTCCGACTTTGTTTCCCAGAGATGAATATTAATATCAAACTTGATTTCAGTTTACTGTTATGCCTTAATATTCTGTATCTTTCACAATTAAATTGTCAGTCCCTTCTTCAAACCCTTACTTAGAATCCTTTCCGAGTTACTTGTTCTTTATGAGAATTCATCCATTTACTAATACCTTATTTTTCGAGGACTAGTCTTA"
k <- 10#
kmers <- function(seq,k) { ret <- c(); for(i in seq(nchar(seq)-k)) { ret <- append(ret,substr(seq,i,i+k)) }; return(ret) }#
km1 <- kmers(seq1,k)#
km2 <- kmers(seq2,k)#
N <- 20#
output <- matrix(NA,length(km1),N)#
for (i in 1:length(km1)) {#
out <- grep(km1[i], km2)#
if(length(out)==0) {next;}#
output[i,1:(length(out))] <- out }#
rowmatch <- which(output[,1] != "NA")#
hit <- output[rowmatch,]#
propHit <-  nrow(hit)/nrow(output)#
r1 <- seq(1:length(km1))#
outplus <- cbind(r1,output)#
hit2 <- outplus[rowmatch,]#
result <- sum(!is.na(output))#
out1 <- NA#
out2 <- NA#
values <- data.frame(out1,out2)#
for(i in 1:nrow(outplus)) {#
out1 <- outplus[i,1]#
  for(j in 2:N) {#
  out2 <- outplus[i,j]#
  if(is.na(out2)==TRUE) {next;}#
  tempval <- data.frame(out1,out2)#
  values <- rbind(values,tempval) }#
}#
values <- values[-1,]#
plot (values[,1],values[,2], xlim=c(0,length(km1)), ylim=c(0,length(km2)), main="10-mer perfect matches", xlab="B&W Lemur CPS1 transcript position", ylab="aye-aye CPS1 transcript position")#
propHit
seq2 <- "GTCAGCCTTAAACACTGACTGCACCCCTCAGCTTTCTTTTCTATTAATTAAGAATCTTATAACAAAACTCTCATAAAAAATATATAATTTTATTTAATCTTAGTGACAAATCATCTTCAAAATGACGAGGATTTTGACAGCTTGCAAAGTGGTGAGGGCACTGAAGACTGGTTTTGGCTTTACCAACGTGACTGCACACCAACCATGGAAATTTTCAAGACCTGGCATCAGACTTCTTTCTGTGAAGGCACAGACAGCGCACATTGTCCTGGAAGATGGAACTAAGATGAAAGGTTACTCCTTTGGCCACCCATCCTCTGTTGCTGGTGAAGTGGTTTTTAATACTGGCCTGGGAGGGTACCCTGAAGCTATTACTGACCCTGCATACAAGGGACAGATCCTCACAATGGCCAACCCTATTATTGGAAATGGTGGAGCCCCTGACACTGCTGCACTGGATGAACTGGGACTTAGAAAATATTTGGAGTCTGATGGAATCAAGGTTGCAGGTTTGCTCGTGCTGAATTATAGCAAAGACTACAACCACTGGCTGGCCACTAAGAGTCTAGGGCAATGGCTACAGGAAGAAAAGGTTCCTGCAATTTATGGGGTGGACACAAGAATGCTGACTAAAATAATTCGGGATAAGGGAACCATGCTTGGGAAGATCGAATTTGAAGGTCAGCCTGTGGATTTTGTGGATCCAAATAAACAGAATTTGATTGCCGAGGTTTCAACCAAGGATGTCAAGGTGTACGGCAAAGGAAACCCTACGAAAGTGGTAGCTGTTGACTGTGGGATAAAAAACAATGTAATCCGCCTACTAGTAAAGAGAGGAGCTGAAGTACATTTAGTTCCCTGGAATCATGATTTCACCAACATGGAGTATGATGGTCTTTTGATCGCTGGAGGACCTGGGAATCCAGCCCTTGCACAACCACTAATTCAGAATGTCAAAAAGATTTTGGAGAGTGATCGCAAGGAGCCGTTGTTTGGAATCAGTACAGGAAATT
TAATAACAGGATTGGCTGCTGGTGCCAAATCCTACAAGATGCCCATGGCCAACAGAGGGCAGAACCAGCCTGTTTTGAATATCACAAACAGACAGGCTTTCATTACTGCTCAGAACCATGGCTACGCTCTGGACAATACCCTCCCTGCTGGGTGGAAACCACTTTTTGTGAATGTCAACGATCAAACAAATGAGGGGATTATGCATGAGAGCAAACCCTTCTTTGCTGTGCAGTTCCACCCAGAGGTCAGCCCAGGGCCGACAGACACTGAGTACCTGTTTGATTCCTTTTTCTCACTAATAAAGAAAGGAAAAGGTACCACCATTACATCAGTTCTACCAAAGCCAGCCCTAGTTGCATCTCGGGTAGAGGTTTCCAAAGTCCTTATCCTAGGATCGGGAGGACTCTCCATTGGTCAGGCAGGTGAATTTGATTACTCGGGATCTCAAGCTGTAAAAGCCATGAAGGAAGAAAATGTCAAAACTGTCCTGATGAACCCAAACATCGCATCAGTCCAGACCAATGAGGTGGGCTTAAAGCAAGCAGATGTCGTCTACTTTCTTCCCATCACCCCTCAGTTCGTCACAGAGGTTATCAAGGCAGAACGGCCAGACGGGTTAATTCTAGGCATGGGTGGCCAAACAGCTCTGAACTGCGGAGTGGAGCTATTCAAGAGAGGTGTGCTCAAGGAATATGGTGTGAAAGTCCTGGGAACTTCAGTTGAATCCATTATGGCCACAGAAGACAGGCAGCTGTTCTCAGACAAACTAAATGAGATTAATGAAAAGATCGCTCCAAGTTTTGCAGTGGAAACAATAGAGGATGCGCTGAAGGCAGCAGACACCATTGGCTACCCAGTGATGATCCGTTCTGCCTATGCACTGGGCGGACTGGGCTCAGGCCTTTGTCCGACCAGGGAGACCTTAATGGATCTTAGCACAAAGGCCTTTGCTATGACCAACCAGATTCTGGTGGAGAAATCAGTGACAGGTTGGAAAGAAATAGAATATGAAGTGGTCCGA
GATGCTGATGACAATTGTGTCACTGTCTGTAATATGGAAAATGTTGATGCCATGGGCGTTCATACAGGTGATTCAGTTGTTGTGGCCCCTGCCCAGACACTTTCCAATGCGGAGTTTCAGATGTTGAGACGCTCTTCAATCAATGTCGTCCGCCACTTGGGCATTGTGGGTGAATGCAACATCCAGTTTGCCCTTCATCCTACCTCAATGGAGTACTGCATCATTGAAGTGAATGCCAGACTGTCCCGAAGCTCTGCCCTGGCTTCAAAGGCCACTGGCTACCCATTGGCATTCATTGCTGCCAAGATTGCCTTAGGAATCCCACTTCCAGAGATCAAGAACGTTGTATCGGGGAAGACATCAGCCTGCTTTGAACCTAGCCTGGATTACATGGTCACCAAGATTCCTCGCTGGGATCTTGACCGTTTTCATGGAACATCTAGTCGAATCGGTAGCTCTATGAAAAGTGTAGGAGAGGTCATGGCTATTGGTCGCACGTTTGAGGAGAGTTTCCAGAAGGCTTTACGGATGTGCCACCCATCTATAGATGGTTTCACTCCCCGTCTCCCAATGAACAAAGAATGGCCGTCTAACCTAGACCTCAGAAGAGAGCTGGCTGACCCATCTAGCACCCGCATCTATGCCATCGCCAAGGCTTTGGAAGACAACATGTCCCCTGATGAGGTTGAGAAGCTCACATACATTGACAAGTGGTTTTTGTATAAGATGCGTGACATTTTAAACATGGAAAAGACACTGAAAGAGTTCAACAGTGAGTCCATTACAGAGGAAACCCTCAAAAAGGCAAAGGAGATCGGGTTCTCAGATAAGCAGATTTCAAAATGCCTAGGGCTGACGGAGGCCCAGACAAGGGAACTGAGGTTAAAGAAGAACATCCACCCTTGGGTTAAACAGATTGATACACTGGCTGCAGAATATCCATCAGTAACAAACTACCTCTATGTTACCTACTGTGGTCAGGAGCATGACATCAATTTTGATGACCACGGAATGATGGTGCT
GGGCTGTGGCCCATATCACATTGGCAGCAGCGTGGAATTTGATTGGTGTGCTGTCTCTAGTATCCGCACACTGCGTCAACTTGGCAAGAAGACAGTGGTGGTGAATTGCAACCCTGAGACTGTGAGCACAGACTTTGATGAGTGTGACAAACTGTACTTTGAAGAGTTGTCTTTGGAGAGAATACTAGACATCTACCATCAGGAGGCATGTGGTGGCTGCATCATATCCGTCGGGGGCCAGATTCCAAACAACCTGGCGGTCCCTCTGTATAAGAATGGTGTCAAGATCATGGGCACAAGTCCATTGCAGATCGACAGGGCTGAGGATCGGTCCATCTTCTCAGCTGTCTTGGATGAGCTGAAGGTGGCTCAGGCACCGTGGAAAGCTGTTAATACTTTGAATGAAGCACTGGAATTTGCAAAGTCTGTGGGCTACCCCTGCTTGTTGAGACCTTCCTATGTTTTGAGTGGGTCTGCCATGAATGTGGTATTCTCTGAGGATGAAATGAAAAAGTTCCTAGAGGAGGCCACTCGAGTCTCTCAGGAGCACCCAGTGGTGCTGACAAAATTTATTGAGGGGGCCCGGGAAGTAGAAATGGATGCTGTTGGCAAAGATGGAAGGGTTATCTCTCATGCCATCTCTGAACATGTTGAAGATGCAGGCGTCCACTCAGGAGATGCCACTCTGATGCTGCCCACACAAACCATCAGCCAAGGAGCCATTGAAAAGGTGAAGGATGCTACCCGAAAGATTGCAAAGGCTTTTGCCATCTCTGGCCCATTCAACGTCCAATTTCTTGTCAAAGGAAATGATGTCTTGGTGATTGAATGCAACCTGAGAGCTTCTCGATCCTTCCCCTTTGTTTCCAAGACTCTCGGGGTAGACTTCATTGATGTGGCCACCAAGGTGATGATTGGAGAGAACATTGAGGAAAAATCTCTTCCAACATTGGAGCATCCCATAATTCCTGCTGACTATGTTGCAATTAAGGCTCCAATGTTTTCCTGGCCCCGGTTGAGGG
ATGCTGACCCTATTTTGAGATGTGAAATGGCTTCCACTGGAGAGGTGGCTTGCTTTGGTGAAGGTATTCACACAGCCTTCCTAAAGGCGATGCTTTCCACAGGATTTAAGATACCCCAGAAAGGCATCCTGATAGGAATTCAGCAATCATTCCGTCCAAAATTCCTTGGTGTGGCTGAACAATTACACGATGAAGGTTTTAAGCTCTTTGCCACGGAAGCCACATCAGACTGGCTCAATGCCAACAATGTTCCTGCCACCCCAGTGGCGTGGCCATCTCAGGAAGGACAGAATCCCAGCCTCTCTTCCATCAGAAAGTTGATTAAAGATGGCAGCATTGACCTAGTGATTAACCTCCCCAATAACAACACTAAGTTTGTCCATGATAATTATGTGATTCGGAGGACAGCTGTTGACAGTGGAATCCCTCTCCTCACTAATTTTCAGGTGACCAAACTTTTTGCTGAAGCTGTACAGAAATCTCGCAACGTGGACTCCAAGAGTCTTTTCCACTACAGGCAATACAGTGCTGGAAAAGCAGCGTAGAGAAGCAGCCACCCAGCCCCATTCTTAATTCAATCTGAGCCACCTTTATCTAAAGGAACCTATTTCTGACTTTGTTTCCCAGAGATGAATATCGATATTGAACTTGATTTCATTTCACTGTTATGCCTTAATATTCTGTATCTTTCACAATTAAATGGTCAGTCCCTTCTTCAAAACCTTACTTAGAATCTTTTCTGAGTTACTTTTTCTTTATGAGAATTCATCCATTTACT"
k <- 10#
kmers <- function(seq,k) { ret <- c(); for(i in seq(nchar(seq)-k)) { ret <- append(ret,substr(seq,i,i+k)) }; return(ret) }#
km1 <- kmers(seq1,k)#
km2 <- kmers(seq2,k)#
N <- 20#
output <- matrix(NA,length(km1),N)#
for (i in 1:length(km1)) {#
out <- grep(km1[i], km2)#
if(length(out)==0) {next;}#
output[i,1:(length(out))] <- out }#
rowmatch <- which(output[,1] != "NA")#
hit <- output[rowmatch,]#
propHit <-  nrow(hit)/nrow(output)#
r1 <- seq(1:length(km1))#
outplus <- cbind(r1,output)#
hit2 <- outplus[rowmatch,]#
result <- sum(!is.na(output))#
out1 <- NA#
out2 <- NA#
values <- data.frame(out1,out2)#
for(i in 1:nrow(outplus)) {#
out1 <- outplus[i,1]#
  for(j in 2:N) {#
  out2 <- outplus[i,j]#
  if(is.na(out2)==TRUE) {next;}#
  tempval <- data.frame(out1,out2)#
  values <- rbind(values,tempval) }#
}#
values <- values[-1,]#
plot (values[,1],values[,2], xlim=c(0,length(km1)), ylim=c(0,length(km2)), main="10-mer perfect matches", xlab="B&W Lemur CPS1 transcript position", ylab="aye-aye CPS1 transcript position")#
propHit
help(prcomp)
x <- 1
seq1 <- "CTTTACCAATGTGACTGCACACCAAAAATGGAAATTTTCAAGACCTGGCATCAGGCTCCTTTCTGTCAAGGCACAGACAGCACACATTGTCCTGGAAGATGGAACTAAGATGAAAGGTTACTCCTTTGGCCATCCATCCTCTGTTGCTGGTGAAGTGGTTTTTAATACTGGCCTGGGAGGGTACCCAGAAGCTATTACTGACCCTGCCTACAAAGGACAGATTCTCACAATGGCCAACCCTATTATTGGGAATGGTGGAGCTCCTGATACTACTGCTCTGGATGAACTGGGACTTAGCAAATATTTGGAGTCTAATGGAATCAAGGTTTCAGGTTTGCTGGTGCTGGATTATAGTAAAGACTACAACCACTGGCTGGCTACCAAGAGTTTAGGGCAATGGCTACAGGAAGAAAAGGTTCCTGCAATTTATGGAGTGGACACAAGAATGCTGACTAAAATAATTCGGGATAAGGGTACCATGCTTGGGAAGATTGAATTTGAAGGTCAGCCTGTGGATTTTGTGGATCCAAATAAACAGAATTTGATTGCTGAGGTTTCAACCAAGGATGTCAAAGTGTACGGCAAAGGAAACCCCACAAAAGTGGTAGCTGTAGACTGTGGGATTAAAAACAATGTAATCCGCCTGCTAGTAAAGCGAGGAGCTGAAGTGCACTTAGTTCCCTGGAACCATGATTTCACCAAGATGGAGTATGATGGGATTTTGATCGCGGGAGGACCGGGGAACCCAGCTCTTGCAGAACCACTAATTCAGAATGTCAGAAAGATTTTGGAGAGTGATCGCAAGGAGCCATTGTTTGGAATCAGTACAGGAAACTTAATAACAGGATTGGCTGCTGGTGCCAAAACCTACAAGATGTCCATGGCCAACAGAGGGCAGAATCAGCCTGTTTTGAATATCACAAACAAACAGGCTTTCATTACTGCTCAGAATCATGGCTATGCCTTGGACAACACCCTCCCTGCTGGCTGGAAACCACTTTTTGTGAATGTCA
ACGATCAAACAAATGAGGGGATTATGCATGAGAGCAAACCCTTCTTCGCTGTGCAGTTCCACCCAGAGGTCACCCCGGGGCCAATAGACACTGAGTACCTGTTTGATTCCTTTTTCTCACTGATAAAGAAAGGAAAAGCTACCACCATTACATCAGTCTTACCGAAGCCAGCACTAGTTGCATCTCGGGTTGAGGTTTCCAAAGTCCTTATTCTAGGATCAGGAGGTCTGTCCATTGGTCAGGCTGGAGAATTTGATTACTCAGGATCTCAAGCTGTAAAAGCCATGAAGGAAGAAAATGTCAAAACTGTTCTGATGAACCCAAACATTGCATCAGTCCAGACCAATGAGGTGGGCTTAAAGCAAGCGGATACTGTCTACTTTCTTCCCATCACCCCTCAGTTTGTCACAGAGGTCATCAAGGCAGAACAGCCAGATGGGTTAATTCTGGGCATGGGTGGCCAGACAGCTCTGAACTGTGGAGTGGAACTATTCAAGAGAGGTGTGCTCAAGGAATATGGTGTGAAAGTCCTGGGAACTTCAGTTGAGTCCATTATGGCTACGGAAGACAGGCAGCTGTTTTCAGATAAACTAAATGAGATCAATGAAAAGATTGCTCCAAGTTTTGCAGTGGAATCGATTGAGGATGCACTGAAGGCAGCAGACACCATTGGCTACCCAGTGATGATCCGTTCCGCCTATGCACTGGGTGGGTTAGGCTCAGGCATCTGTCCCAACAGAGAGACTTTGATGGACCTCAGCACAAAGGCCTTTGCTATGACCAACCAAATTCTGGTGGAGAAGTCAGTGACAGGTTGGAAAGAAATAGAATATGAAGTGGTTCGAGATGCTGATGACAATTGTGTCACTGTCTGTAACATGGAAAATGTTGATGCCATGGGTGTTCACACAGGTGACTCAGTTGTTGTGGCTCCTGCCCAGACACTCTCCAATGCCGAGTTTCAGATGTTGAGACGTACTTCAATCAATGTTGTTCGCCACTTGGGCATTGTGGGTGAATGC
AACATTCAGTTTGCCCTTCATCCTACCTCAATGGAATACTGCATCATTGAAGTGAATGCCAGACTGTCCCGAAGCTCTGCTCTGGCCTCAAAAGCCACTGGCTACCCATTGGCATTCATTGCTGCAAAGATTGCCCTAGGAATCCCACTTCCAGAAATTAAGAACGTCGTATCCGGGAAGACATCAGCCTGTTTTGAACCTAGCCTGGATTACATGGTCACCAAGATTCCCCGCTGGGATCTTGACCGTTTTCATGGAACATCTAGCCGAATTGGTAGCTCTATGAAAAGTGTAGGAGAGGTCATGGCTATTGGTCGTACCTTTGAGGAGAGTTTCCAGAAAGCTTTACGGATGTGCCACCCATCTATAGAAGGTTTCACTCCCCGTCTCCCAATGAACAAAGAATGGCCATCTAATTTAGATCTTAGAAAAGAGTTGTCTGAACCAAGCAGCACGCGTATCTATGCCATTGCCAAGGCCATTGATGACAACATGTCCCTTGATGAGATTGAGAAGCTCACATACATTGACAAGTGGTTTTTGTATAAGATGCGTGATATTTTAAACATGGAAAAGACACTGAAAGGGCTCAACAGTGAGTCCATGACAGAAGAAACCCTGAAAAGGGCAAAGGAGATTGGGTTCTCAGATAAGCAGATTTCAAAATGCCTTGGGCTCACTGAGGCCCAGACAAGGGAGCTGAGGTTAAAGAAAAACATCCACCCTTGGGTTAAACAGATTGATACACTGGCTGCAGAATACCCATCAGTAACAAACTATCTCTATGTTACCTACAATGGTCAGGAGCATGATGTCAATTTTGATGACCATGGAATGATGGTGCTAGGCTGTGGTCCATATCACATTGGCAGCAGTGTGGAATTTGATTGGTGTGCTGTCTCTAGTATCCGCACACTGCGTCAACTTGGCAAGAAGACGGTGGTGGTGAATTGCAATCCTGAGACTGTGAGCACAGACTTTGATGAGTGTGACAAACTGTACTTTGAAGAGTTGTCCTTGGA
GAGAATCCTAGACATCTACCATCAGGAGGCATGTGGTGGCTGCATCATATCAGTTGGAGGCCAGATTCCAAACAACCTGGCAGTTCCTCTATACAAGAATGGTGTCAAGATCATGGGCACAAGCCCCCTGCAGATCGACAGGGCTGAGGATCGCTCCATCTTCTCAGCTGTCTTGGATGAGCTGAAGGTGGCTCAGGCACCTTGGAAAGCTGTTAATACTTTGAATGAAGCACTGGAATTTGCAAAGTCTGTGGACTACCCCTGCTTGTTGAGGCCTTCCTATGTTTTGAGTGGGTCTGCTATGAATGTGGTATTCTCTGAGGATGAGATGAAAAAATTCCTAGAAGAGGCGACTAGAGTTTCTCAGGAGCACCCAGTGGTGCTGACAAAATTTGTTGAAGGGGCCCGAGAAGTAGAAATGGACGCTGTTGGCAAAGATGGAAGGGTTATCTCTCATGCCATCTCTGAACATGTTGAAGATGCAGGTGTCCACTCGGGAGATGCCACTCTGATGCTGCCCACACAAACCATCAGCCAAGGGGCCATTGAAAAGGTGAAGGATGCTACCCGGAAGATTGCAAAGGCTTTTGCCATCTCTGGTCCATTCAACGTCCAATTTCTTGTCAAAGGAAATGATGTCTTGGTGATTGAGTGTAACTTGAGAGCTTCTCGATCCTTCCCCTTTGTTTCCAAGACTCTTGGGGTTGACTTCATTGATGTGGCCACCAAGGTGATGATTGGAGAGAATGTTGATGAGAAACATCTTCCAACATTGGACCATCCCATAATTCCTGCTGACTATGTTGCAATTAAGGCTCCCATGTTTTCCTGGCCCCGGTTGAGGGATGCTGACCCCATTCTGAGATGTGAGATGGCTTCCACTGGAGAGGTGGCTTGCTTTGGTGAAGGTATTCATACAGCCTTCCTAAAGGCAATGCTTTCCACAGGATTTAAGATACCCCAGAAAGGCATCCTGATAGGCATCCAGCAATCATTCCGGCCAAGATTCCTTGGTGTGGCTG
AACAATTACACAATGAAGGTTTCAAGCTGTTTGCCACGGAAGCCACATCAGACTGGCTCAACGCCAACAATGTCCCTGCCACCCCAGTGGCATGGCCGTCTCAAGAAGGACAGAATCCCAGCCTCTCTTCCATCAGAAAATTGATTAGAGATGGCAGCATTGACCTAGTGATTAACCTTCCCAACAACAACACTAAATTTGTCCATGATAATTATGTGATTCGGAGGACAGCTGTTGATAGTGGAATCCCTCTCCTCACTAATTTTCAGGTGACCAAACTTTTTGCTGAAGCTGTGCAGAAATCTCGCAAGGTGGACTCCAAGAGTCTTTTCCACTACAGGCAGTACAGTGCTGGAAAAGCAGCATAGAGATGCAGACACCCCAGCCCCATTATTAAATCAACCTGAGCCACATGTTATCTAAAGGAACTGATTCACAACTTTCTCAGAGATGAATATTGATAACTAAACTTCATTTCAGTTTACTTTGTTATGCCTTAATATTCTGTGTCTTTTGCAATTAAATTGTCAGTCACTTCTTCAAAACCTTACAGTCCTTCCTAAGTTA"
length(seq1)
nchar(seq1)
?padj
569101*74
y <- 569101*74
y/1000000
193665*74
14331210/600000
(932921*74)/1000000
(343421*74)/600000
28000000*76
(28000000*76)/3000000000
(20000000*101*2)/3000000000
(20000000*101*2*8)/3000000000
28*.75
(21000000*101*2*8)/3000000000
.7*15
11/15
20*.7
15000/1000000
1052310/1428685
2544/0.7365584
1909818/0.7365584
501552/0.7365584
1024382/0.7365584
1411004/0.7365584
835159/0.7365584
997175/0.7365584
550471/4197550
361/0.1311410
52474/0.1311410
56967/0.1311410
51902/0.1311410
45625/0.1311410
48366/0.1311410
62946/0.1311410
388048+457146+440746+460706
9/1746646
5/446949
2592894*.01
400134*.01
1.91/1.05
630/550
1.82/1.15
9.56/1.05
2.60/.550
9.1/4.7
9.03/1.05
7.01/.550
8.6/12.7
8.195/1.05
2.699/.550
7.8/4.9
11.288/1.05
3.832/.550
10.75/6.967
7.516/1.05
2.510/.550
7.158/4.563
3.979/1.05
2.454/.550
3.789/4.461
(0.68+0.85)/2
(1.93+1.59+1.54+1.57)/4
0.36/88
36/88
(20150/3454)+(35409/5198)+(8345/5783)+(28735/4784)+(23811/5044)+(6769/6048)
(3612/2753)+(22589/4307)+(2375/4356)+(5219/3483)+(7745/4149)+(2400/4473)
(25.93523+11.00365)/12
(14+12+13+9+6)/6
1271+1277+1052+1059+726+729+1129+1129+1110+1110+1273+1279+1056+1065+732+733+1129+1129+1108+1108+1069+1074+1125+1120+1092+1092+1185+1185+1075+1080+1131+1124+1092+1092+1193+1193+1084+1079+1075+1073+1088+1088+1085+1082+1084+1080+1097+1097+1121+1121+1048+1048+1116+1116+1045+1045+1231+1231+1231+1231
20+16+12+8+4
16*15/2
65722/60
30216+415+577+6108
37316+3060+2640
427/531
300000*120
36*8
288*216
x <- c(0.009, 0.006, 0.015, 0.021, 0.052, 0.005)
x
mean(x)
median(x)
143/2.54
56.29/12
2*(334.04-330.075838)
28.9+31.2+32.9+34.1+34.8+35.1+35.3+33.3+32.5+34.6+34.5+34.3+33.3+32.3+31.5+30.7
30*16
529.3*(108*2)
114.3/3
30*16
30*108*2
528*108*2
114/3
38*.85
(0.243-1.1039)/0.82
(0.243-1.1039)/0.82283
750*.2
650*.2
3400*12
600000*.2
2700*12
600000*.2
600000-120000
400000
200000*.035
1000*72
354893-269660
3009-1967
1042*72
70000/12
155/120
35/120
650000*.2
130000+80000
650000-210000
(3009-2086)*72
358000-269000
89000-66456
(3310-2295)*72
394000-297000
97000-73080
155*6
155*.06
55/7
setwd("/users/gperry/Desktop/Fecal DNA/Manuscript/Datasets_S1_S2/ProcessedPileupOut/Chr21/")
fileName <- 'R3L4.txt'  ## Sopulu fecal
reads <- read.table(fileName,sep="\t", header=TRUE)## removing based on indelsi <- which(is.na(reads$Indels) == FALSE)reads2 <- reads[-i,]## stripping out fields with characterssubcount1 <- reads2[,-c(1,3,16)]## removing where Deleted > 1r <- which(subcount1$Deleted > 1)subcounts <- subcount1[-r,]## rownames(subcounts) <- reads$V1subcounts$Cov <- subcounts$A + subcounts$C + subcounts$G + subcounts$T + subcounts$a + subcounts$c + subcounts$g + subcounts$tsubcounts$CovFor <- subcounts$A + subcounts$C + subcounts$G + subcounts$Tsubcounts$CovRev <- subcounts$a + subcounts$c + subcounts$g + subcounts$tsubcounts$MFor <- ifelse(((subcounts$A >= subcounts$C) & (subcounts$A >= subcounts$G) & (subcounts$A >= subcounts$T)), subcounts$A, ifelse(((subcounts$C >= subcounts$G) & (subcounts$C >= subcounts$T)), subcounts$C, ifelse((subcounts$G >= subcounts$T), subcounts$G, subcounts$T)))subcounts$MRev <- ifelse(((subcounts$a >= subcounts$c) & (subcounts$a >= subcounts$g) & (subcounts$a >= subcounts$t)), subcounts$a, ifelse(((subcounts$c >= subcounts$g) & (subcounts$c >= subcounts$t)), subcounts$c, ifelse((subcounts$g >= subcounts$t), subcounts$g, subcounts$t)))subcounts$MPropFor <- subcounts$MFor / subcounts$CovForsubcounts$MPropRev <- subcounts$MRev / subcounts$CovRev## filtering based on coverage.CF <- 10filtcount1 <- subcounts[subcounts$CovFor >= CF & subcounts$CovRev >= CF,]dim(filtcount1)## filtering out "duff" regionsfilt.21 <- c(49, 72, 74, 88, 91, 111, 115, 137, 144, 181, 186, 194, 205, 255, 269, 280, 320, 358, 369)filt.X <- c(14, 15, 37, 46, 49, 79, 80, 83, 85, 88, 94, 95, 108, 112, 114, 117, 124, 126, 138, 183, 198)## r.duff <- which(filtcount1$Region %in% filt.21)r.duff <- which(filtcount1$Region %in% filt.X)filtcount2 <- filtcount1[-r.duff,]## filtering out rows with no bases (NA all)y <- which(is.na(filtcount2$A)==TRUE)length(y)filtcount3 <- filtcount2[-y,]## filtering out all but one point where both props = 1k <- which((filtcount3$MPropFor == 1) & (filtcount3$MPropRev == 1))k.s <- k[-1]filtcounts <- filtcount3[-k.s,]
dim(filtcounts)
dim(filtcount3)
## filtering based on coverage.CF <- 10filtcount1 <- subcounts[subcounts$CovFor >= CF & subcounts$CovRev >= CF,]dim(filtcount1)## filtering out "duff" regionsfilt.21 <- c(49, 72, 74, 88, 91, 111, 115, 137, 144, 181, 186, 194, 205, 255, 269, 280, 320, 358, 369)filt.X <- c(14, 15, 37, 46, 49, 79, 80, 83, 85, 88, 94, 95, 108, 112, 114, 117, 124, 126, 138, 183, 198)r.duff <- which(filtcount1$Region %in% filt.21)## r.duff <- which(filtcount1$Region %in% filt.X)filtcount2 <- filtcount1[-r.duff,]## filtering out rows with no bases (NA all)y <- which(is.na(filtcount2$A)==TRUE)length(y)filtcount3 <- filtcount2[-y,]## filtering out all but one point where both props = 1k <- which((filtcount3$MPropFor == 1) & (filtcount3$MPropRev == 1))k.s <- k[-1]filtcounts <- filtcount3[-k.s,]
dim(filtcounts)
dim(filtcount3)
932429-63979
868450/932429
setwd("/users/gperry/Desktop/Fecal DNA/Manuscript/Datasets_S1_S2/ProcessedPileupOut/ChrX/")
fileName <- 'R3L4.txt'  ## Sopulu fecal
reads <- read.table(fileName,sep="\t", header=TRUE)## removing based on indelsi <- which(is.na(reads$Indels) == FALSE)reads2 <- reads[-i,]## stripping out fields with characterssubcount1 <- reads2[,-c(1,3,16)]## removing where Deleted > 1r <- which(subcount1$Deleted > 1)subcounts <- subcount1[-r,]## rownames(subcounts) <- reads$V1subcounts$Cov <- subcounts$A + subcounts$C + subcounts$G + subcounts$T + subcounts$a + subcounts$c + subcounts$g + subcounts$tsubcounts$CovFor <- subcounts$A + subcounts$C + subcounts$G + subcounts$Tsubcounts$CovRev <- subcounts$a + subcounts$c + subcounts$g + subcounts$tsubcounts$MFor <- ifelse(((subcounts$A >= subcounts$C) & (subcounts$A >= subcounts$G) & (subcounts$A >= subcounts$T)), subcounts$A, ifelse(((subcounts$C >= subcounts$G) & (subcounts$C >= subcounts$T)), subcounts$C, ifelse((subcounts$G >= subcounts$T), subcounts$G, subcounts$T)))subcounts$MRev <- ifelse(((subcounts$a >= subcounts$c) & (subcounts$a >= subcounts$g) & (subcounts$a >= subcounts$t)), subcounts$a, ifelse(((subcounts$c >= subcounts$g) & (subcounts$c >= subcounts$t)), subcounts$c, ifelse((subcounts$g >= subcounts$t), subcounts$g, subcounts$t)))subcounts$MPropFor <- subcounts$MFor / subcounts$CovForsubcounts$MPropRev <- subcounts$MRev / subcounts$CovRev## filtering based on coverage.CF <- 10filtcount1 <- subcounts[subcounts$CovFor >= CF & subcounts$CovRev >= CF,]dim(filtcount1)## filtering out "duff" regionsfilt.21 <- c(49, 72, 74, 88, 91, 111, 115, 137, 144, 181, 186, 194, 205, 255, 269, 280, 320, 358, 369)filt.X <- c(14, 15, 37, 46, 49, 79, 80, 83, 85, 88, 94, 95, 108, 112, 114, 117, 124, 126, 138, 183, 198)## r.duff <- which(filtcount1$Region %in% filt.21)r.duff <- which(filtcount1$Region %in% filt.X)filtcount2 <- filtcount1[-r.duff,]## filtering out rows with no bases (NA all)y <- which(is.na(filtcount2$A)==TRUE)length(y)filtcount3 <- filtcount2[-y,]## filtering out all but one point where both props = 1k <- which((filtcount3$MPropFor == 1) & (filtcount3$MPropRev == 1))k.s <- k[-1]filtcounts <- filtcount3[-k.s,]
dim(filtcount3)
dim(filtcounts)
440746-27522
413224/440746
